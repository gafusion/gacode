#!/usr/bin/env python

#----------------------------------------------------------------
# SCRIPT:
#  gacode_reg <testdir> <compdir> <precfile> <tol>
#
# FUNCTION:
#  Perform regression comparison.  That is, test data against 
#  known solution.
#-----------------------------------------------------------------

import sys
import os
import string

#--------------------------------------------------
n=len(sys.argv)

if n <> 5:
    print "Usage: gyro_reg <testdir> <compdir> <precfile> <tol>"
    print 
    print "       Note that <testdir> must match a reference directory"
    print "       contained in <compdir>" 
    sys.exit(0)
#--------------------------------------------------

testdir  = sys.argv[1]+'/'
checkdir = sys.argv[2]+'/'+testdir
precfile = sys.argv[3]
tol      = float(sys.argv[4])

check1  = precfile
regress = 'regress'

#--------------------------------------------------
# Known data
#
if os.path.isfile(checkdir+check1) == 0:
	print "Regression data does not exist for "+checkdir+check1
	sys.exit(0)

# Get regression text string if it exists
try:
    for line in open(checkdir+regress,'r').readlines():
        regtext = string.strip(line)
except:
    regtext = ''

# Get correct checksum from precision file (out.code.prec):
for line in open(checkdir+check1,'r').readlines():
    line = string.strip(line)

data = string.splitfields(line,' ')
x1=eval(data[0])
#--------------------------------------------------

#--------------------------------------------------
# Data in question
#
if os.path.isfile(testdir+check1) == 0:
	print "Regression data does not exist for "+testdir+check1
	sys.exit(0)

for line in open(testdir+check1,'r').readlines():
    line = string.strip(line)

data = string.splitfields(line,' ')
y1   = eval(data[0])

#--------------------------------------------------

#--------------------------------------------------
# Perform comparison
#

if x1 == 0.0: 
   if y1 == 0.0:
      print sys.argv[1]+": PASS  "+regtext
   else:
      print sys.argv[1]+": FAIL  "+regtext

else:

    z=abs((x1-y1))/x1

    if z < tol:
        print sys.argv[1]+": PASS  "+regtext
    else:
        print sys.argv[1]+": FAIL  "+regtext
#--------------------------------------------------



