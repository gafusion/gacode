#!/bin/bash
#==============================================================================
# profiles_gen_plot
#
# PURPOSE
#  Script to manage plotting of profiles_gen input
#==============================================================================

#==============================================================================
# Syntax validity check and help message
#
n=$#

if [ $n -eq 0 ]
then
   echo
   echo "Usage:    profiles_gen_plot [options]"
   echo 
   echo "          -i <file1>,<file2>,...,<fileN>"
   echo "          Sequence of input.profiles files."
   echo "          [Default is input.profiles in the current directory]"
   echo
   echo "          -f <plotfile.ext>"
   echo "          Plot to plotfile.ext instead of screen." 
   echo "          <ext>=emf, eps, pdf, png, ps, raw, rgba, svg, svgz"
   echo 
   echo "          -interactive"
   echo "          Use python in interactive mode.  Useful if matplotlibrc has interactive:True  "
   echo
   echo "          -loc <Legend location: 1,2,3,4>"
   echo
   echo "          -title <Optional title for top of plot>"  
   echo
   echo " PROFILE PLOTTING MODE:"
   echo
   echo "          -options"
   echo "          Display all possible simulated parameters to plot in"
   echo "          <file1>."
   echo 
   echo "          -plot <var1>,<var2>,...,<varN>"
   echo "          Produce plots of N parameters given."  
   echo "          Default is ne,ni_1,Te,Ti_1."
   echo 
   echo "          -t <label1>,<label2>,...,<labelN>"  
   echo
   echo "          -r <flux-surface coordinate for plotting>"
   echo "          Choices are r,r/a,rho"
   echo
   echo " FLUX-SURFACE PLOTTING MODE:"
   echo 
   echo "          -n <integer>"
   echo "          Change number of flux surfaces to plot.  Default is 16."
   echo
   echo "          -surf"
   echo "          Produce Miller/Fourier flux surface plots."
   echo
   echo "          -msurf"
   echo "          Produce Miller flux surface plots."
   echo
   echo "          -i0"
   echo "          Radial index of surface to plot."
   echo "          [Default is to plot all surface]."
   echo
   echo "          -fsurf"
   echo "          Produce Fourier flux surface plots."
   echo
   echo
   echo "EXAMPLES:"
   echo
   echo "       profiles_gen_plot -options"
   echo "       profiles_gen_plot -i input.profiles -plot bunit"
   echo "       profiles_gen_plot -surf"
   echo
fi

#==============================================================================
# Define variables for flag capture
#
INFILES=input.profiles,.,.,.,.
PLOTS=Te,Ti_1
INTERACTIVE=
FTYPE=screen
LOC=1
TOPTITLE=null

# Plot options
OPTIONS_FLAG=0
PLOT_FLAG=0
RVAR="r"

# Surface options
SURF=null
I0=-1
#==============================================================================

#==============================================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -i) shift ; INFILES=$1 ;;

  -options) OPTIONS_FLAG=1 ;;

  -plot) shift ; PLOT_FLAG=1 ; PLOTS="$1" ;;

  -r) shift ; RVAR=$1 ;;

  -surf)  SURF=both ;;
  -msurf) SURF=miller ;;
  -fsurf) SURF=fourier ;;

  -i0) shift ; I0=$1 ;;
  
  -f) shift ; FTYPE=$1 ;;

  -loc) shift ; LOC=$1 ;;

  -t) shift ; T=$1 ;;

  -title) shift ; TOPTITLE=$1 ;;

  -interactive) INTERACTIVE=-i ;;

   *) echo "ERROR: incorrect syntax." ; exit 1 ;;

  esac
  shift
done
#==============================================================================

PYROOT=$GACODE_ROOT/python/profiles_gen

#==============================================================================
# Give possible data to be plotted

if [ $OPTIONS_FLAG -eq 1 ]
then
  python $INTERACTIVE $PYROOT/options.py $INFILES 
  exit 0
fi
#==============================================================================

#==============================================================================
# Plot flux surfaces

if [ "$SURF" != "null" ]
then
   python $INTERACTIVE $PYROOT/fluxplot.py $INFILES $SURF $I0 $FTYPE $LOC
   exit 0
fi
#==============================================================================

#==============================================================================
# Plot data

if [ $PLOT_FLAG -eq 1 ]
then
   python $INTERACTIVE $PYROOT/profileplot.py $RVAR $INFILES $PLOTS $FTYPE $LOC "$T" "$TOPTITLE"
   exit 0
fi
#==============================================================================

