#!/bin/sh
#
# SCRIPT:
#  queue_go.REGATTA
#
# FUNCTION:
#  Batch generator for IBM LoadLeveler queue.

nproc=${1}
queue_num=${2}
sim=${3}
simpath=${4}
code=${5}

# For bassi, we need nodes = nproc/8

nodes=`expr $nproc / 32`

time="24:00:00"

case "$queue_num" in

   1 )
    
      queue="monster" ;
      tpn=32;;

   2 )
 
      queue="dino" ;
      tpn=32;;


   3 )

      queue="jumbo" ;
      tpn=32;;

   4 )
 
      queue="big" ;
      tpn=32;;
 
   5 )
 
      queue="lhuge" ;
      tpn=32;;

   6 )
 
      queue="huge" ;
      tpn=32;;

   7 )
 
      queue="develop_16p" ;
      tpn=16;
      time="00:15:00"
      nodes=1;; 

   8 )
 
      queue="develop_8p" ;
      tpn=8;
      time="00:15:00"
      nodes=1;; 

   9 )
 
      queue="develop_4p" ;
      tpn=4;
      time="00:15:00"
      nodes=1;; 

esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

echo "#@ job_name = $sim" > $bfile
echo "#@ output = $simpath/$sim/batch.out" >> $bfile
echo "#@ error = $simpath/$sim/batch.err" >> $bfile
echo "#@ job_type = parallel" >> $bfile
echo "#@ environment = COPY_ALL" >> $bfile
echo "#@ notification = complete" >> $bfile
echo "#@ network.MPI = sn_all,not_shared,us" >> $bfile
echo "#@ node_usage = shared" >> $bfile
echo "#@ class = $queue" >> $bfile
echo "#@ tasks_per_node = $tpn" >> $bfile
echo "#@ wall_clock_limit = $time" >> $bfile 
echo "#@ node = $nodes" >> $bfile
echo "#@ resources = ConsumableCpus(1)" >> $bfile
echo "#@ queue" >> $bfile
echo "$code -e $sim -n $nproc -p $simpath" >> $bfile ;;

echo "Submit your job [y,n]?"
   
read submit
   
if [ "$submit" = "y" ] ; then
   llsubmit $bfile
fi

exit 1
