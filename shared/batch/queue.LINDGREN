#!/bin/sh
#
# SCRIPT:
#  queue.LINDGREN
#
# FUNCTION:
#  Batch generator for LINDGREN (Cray XE6 system)

nmpi=${1}
sim=${2}
simpath=${3}
code=${4}
nomp=${5}
numa=${6}
mpinuma=${7}

#=========================================================================

echo "Cray XE6 (LINDGREN) queue (PBS):"
echo
echo "[0] 30 min"
echo "[1] 1 hour"
echo "[2] 2 hours" 
echo "[3] 6 hours"
echo "[4] 12 hours"
echo "[5] 24 hours  < 36384 cores"

read -p "Select a queue [0] " queue_num

case "$queue_num" in
  0) limit="0:30:00" ;;
  1) limit="1:00:00" ;;
  2) limit="2:00:00" ;;
  3) limit="6:00:00" ;;
  4) limit="12:00:00" ;;
  5) limit="24:00:00" ;;
esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

# Specify job name
echo "#PBS -N $sim" > $bfile
# Account to charge
# echo "#PBS -A $repo" >> $bfile
# STDIO
echo "#PBS -o $simpath/$sim/batch.out" >> $bfile
# STDERR
echo "#PBS -e $simpath/$sim/batch.err" >> $bfile
# Queue name
#echo "#PBS -q $queue" >> $bfile
# Max wall-clock time and number of compute cores
#echo "#PBS -l walltime=$limit" >> $bfile
#echo "cd \${PBS_O_WORKDIR}" >> $bfile
#if [ "$SHELL" = "/bin/bash" ] ; then
#   echo "export MPICH_RANK_REORDER_METHOD=0" >> $bfile
#else
#   echo "setenv MPICH_RANK_REORDER_METHOD 0" >> $bfile
#fi
# echo "date" >> $bfile
## Node information
## Try running 'checkjob <jobid>' command
#echo "/sw/xt5/bin/nodeinfo" >> $bfile
echo "$code -e $sim -n $nmpi -nomp $nomp -p $simpath" >> $bfile 

read -p "Submit your job [y/n] " submit
  
if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 0

