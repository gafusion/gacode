#!/bin/bash
#
# SCRIPT:
#  queue.DROP
#
# FUNCTION:
#  Batch generator for GA drop cluster  

nmpi=${1}
sim=${2}
simpath=${3}
code=${4}
nomp=${5}
numa=${6}
mpinuma=${7}

nodes=$(($nmpi*$nomp/12))

case "$nomp" in
  1) queue="all.q" ;;
  2) queue="mpi_6.q" ;;
  3) queue="mpi_4.q" ;;
  6) queue="mpi_2.q" ;;
  *) echo "Invalid value for OpenMP thread" ; exit ;;
esac

#=========================================================================

echo "----------------------------------"
echo "Drop cluster queue (SGE)"
echo "----------------------------------"
echo 
echo "Selected $queue with $(($nmpi*$nomp)) total cores."

bfile=$simpath/$sim/batch.sh

# Copy appropriate commands to batch directory:

echo "#$ -N $sim" > $bfile
echo "#$ -o $simpath/$sim/batch.out" >> $bfile
echo "#$ -e $simpath/$sim/batch.err" >> $bfile
echo "#$ -pe mvapich2_intel $nmpi" >> $bfile
echo "#$ -S /bin/bash" >> $bfile
echo "#$ -V" >> $bfile
echo "#$ -q $queue" >> $bfile
echo "source /act/Modules/3.2.6/init/sh" >> $bfile
echo "module load mvapich2/intel" >> $bfile
echo 'export MPD_CON_EXT="sge_$JOB_ID.$TASK_ID"' >> $bfile
echo 'export MV2_RNDV_PROTOCOL=RGET' >> $bfile
echo "$code -e $sim -n $nmpi -nomp $nomp -p $simpath" >> $bfile

echo "Output written to $bfile"

# Submit to queue?

read -p "Submit your job [y/n] " submit
   
chmod +x $bfile

if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 0
