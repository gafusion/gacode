#!/bin/sh
#
# SCRIPT:
#  queue_go.LINDGREN
#
# FUNCTION:
#  Batch generator for LINDGREN (Cray XE6 system)

#---------------------------
# Set to desired repository:
# repo=${GYRO_REPO:-FUS023JC}
#---------------------------

nproc=${1}
queue_num=${2}
sim=${3}
simpath=${4}
code=${5}
# raise nodes to a multiple of 24 cores; use $nproc in execute line
# nodes=$[24*(($nproc+23)/24)]

case "$queue_num" in

   0 )

      limit="0:30:00" ;;

   1 )

      limit="1:00:00" ;;

   2 )

      limit="2:00:00" ;;

   3 )

      limit="6:00:00" ;;

   4 )

      limit="12:00:00" ;;

   5 )

      limit="24:00:00" ;;

esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

# Specify job name
echo "#PBS -N $sim" > $bfile
# Account to charge
# echo "#PBS -A $repo" >> $bfile
# STDIO
echo "#PBS -o $simpath/$sim/batch.out" >> $bfile
# STDERR
echo "#PBS -e $simpath/$sim/batch.err" >> $bfile
# Queue name
#echo "#PBS -q $queue" >> $bfile
# Max wall-clock time and number of compute cores
#echo "#PBS -l walltime=$limit" >> $bfile
#echo "cd \${PBS_O_WORKDIR}" >> $bfile
#if [ "$SHELL" = "/bin/bash" ] ; then
#   echo "export MPICH_RANK_REORDER_METHOD=0" >> $bfile
#else
#   echo "setenv MPICH_RANK_REORDER_METHOD 0" >> $bfile
#fi
# echo "date" >> $bfile
## Node information
## Try running 'checkjob <jobid>' command
#echo "/sw/xt5/bin/nodeinfo" >> $bfile
echo "$code -e $sim -n $nproc -p $simpath" >> $bfile 

echo "Submit your job [y,n]?"
   
read submit
   
if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 1

