#!/bin/sh
#
# SCRIPT:
#  queue_go.JACQUARD
#
# FUNCTION:
#  Batch generator for JACQUARD (AMD64+PBS)

# Set to desired repository:
repository=${GYRO_REPO:-gc3}

nproc=${1}
queue_num=${2}
sim=${3}
simpath=${4}
code=${5}
nodes=`expr $nproc / 2`

case "$queue_num" in

   1 )

      queue="interactive" ; 
      wtime="00:30:00" ;;

   2 )

      queue="debug" ;
      wtime="00:30:00" ;;

   3 )

      queue="batch" ; 
      wtime="48:00:00" ;;

   4 )

      queue="batch" ;
      wtime="24:00:00" ;;

   5 )

      queue="batch" ; 
      wtime="12:00:00" ;;

   6 )

      queue="batch" ;
      wtime="06:00:00" ;;

esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

echo "#PBS -N $sim" > $bfile
echo "#PBS -V" >> $bfile
echo "#PBS -o $simpath/$sim/batch.out" >> $bfile
echo "#PBS -e $simpath/$sim/batch.err" >> $bfile
echo "#PBS -q $queue" >> $bfile
echo "#PBS -l nodes=$nodes:ppn=2,walltime=$wtime" >> $bfile
echo "#PBS -A $repository" >> $bfile
echo "module load acml" >> $bfile
echo "$code -e $sim -n $nproc -p $simpath" >> $bfile 

# Submit to queue?

echo "Submit your job [y,n]?"
   
read submit
   
if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 1
