#! /usr/bin/env bash
#
# SCRIPT:
#  queue_go.HOPPER2
#
# FUNCTION:
#  Batch generator for Cray XE6
#  (hopper2.nersc.gov)  Early user period, may need to be updated later.
#-------------------------------
#
# Created 10 December 2010
#

repo=${GYRO_REPO:-gc3}

nproc=${1}
nproc=$((nproc*6))
queue_num=${2}
sim=${3}
simpath=${4}
code=${5}

# raise nodes to a multiple of 24 cores; but use $nproc in the execute line
nodes=$(($nproc/24))
cores=$((24*nodes))
resid=$(($nproc-$cores))

if [ $resid -ne 0 ]
then
   echo "INFO: (batch) Adding extra node since number of cores not multiple of 24"
   nodes=$(($nodes+1))
   cores=$((24*$nodes))
fi

case "$queue_num" in

   1 )

      queue="debug" ;
      limit="0:30:00" ;;

   2 )

      queue="regular" ;
      limit="1:00:00" ;;

   3 )

      queue="regular" ;
      limit="2:00:00" ;;

   4 )

      queue="regular" ;
      limit="6:00:00" ;;

   5 )

      queue="regular" ;
      limit="12:00:00" ;;

   6 )

      queue="low" ;
      limit="12:00:00" ;;


esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

echo "#PBS -N $sim" > $bfile
echo "#PBS -A $repo" >> $bfile
echo "#PBS -o $simpath/$sim/batch.out" >> $bfile
echo "#PBS -e $simpath/$sim/batch.err" >> $bfile
echo "#PBS -q $queue" >> $bfile
echo "#PBS -l walltime=$limit" >> $bfile
echo "#PBS -l mppwidth=$cores" >> $bfile
echo "#PBS -m abe" >> $bfile
echo "#PBS -M ${USER}@nersc.gov" >> $bfile
#if [ "$SHELL" == "/bin/bash" ]; then
#   echo "export OMP_NUM_THREADS=6" >> $bfile
#else
#   echo "setenv OMP_NUM_THREADS 6" >> $bfile
#fi
nproc=$(($nproc/6))
gyro_opts="-e $sim -n $nproc -p $simpath"

echo "$code $gyro_opts" >> $bfile 

echo "Submit your job [y,n]?"
   
read submit
   
if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 1
