#!/bin/sh
#
# SCRIPT:
#  queue_go.SP
#
# FUNCTION:
#  Batch generator for NERSC SP LoadLeveler queue.

repository="gc3"

nproc=${1}
queue_num=${2}
sim=${3}
simpath=${4}
code=${5}

echo "** Will charge to repository $repository **"

# For bassi, we need nodes = nproc/8

nodes=`expr $nproc / 8`

case "$queue_num" in

   1 )
    
      queue="debug"  ;
      limit="30:00" ;

      if [ $nproc -gt 64 ] ; then
         echo "You cannot use the debug queue with n > 64"
         exit 1 
      fi ;;
        
   2 )
 
      queue="interactive"  ;
      limit="30:00" ;

      if [ $nproc -gt 32 ] ; then
         echo "You cannot use the interactive queue with n > 32"
         exit 1 
      fi ;;

   3 )

      queue="premium" ;
      limit="12:00:00" ;;

   4 )
 
      queue="regular"  ;
      limit="36:00:00" ;;
 
   5 )
 
      queue="regular"  ;
      limit="18:00:00" ;;
 
   6 )
 
      queue="low"  ;
      limit="12:00:00" ;;

esac

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

echo "#@ job_name = $sim" > $bfile
echo "#@ account_no = $repository" >> $bfile
echo "#@ output = $simpath/$sim/batch.out" >> $bfile
echo "#@ error = $simpath/$sim/batch.err" >> $bfile
echo "#@ job_type = parallel" >> $bfile
echo "#@ environment = COPY_ALL" >> $bfile
echo "#@ notification = complete" >> $bfile
echo "#@ network.MPI = sn_all,not_shared,us" >> $bfile
echo "#@ node_usage = not_shared" >> $bfile
echo "#@ class = $queue" >> $bfile
echo "#@ tasks_per_node = 8" >> $bfile
echo "#@ node = $nodes" >> $bfile
#echo "setenv MP_SINGLE_THREAD no" >> $bfile

echo "Limit to 1 hour [y,n]?"
read in_limit
if [ "$in_limit" = "y" ] ; then
   echo "#@ wall_clock_limit = 1:00:00" >> $bfile
else
   echo "#@ wall_clock_limit = ${limit}" >> $bfile
fi

echo "#@ queue" >> $bfile

echo "$code -e $sim -n $nproc -p $simpath" >> $bfile

# Submit to queue?

echo "Submit your job [y,n]?"
   
read submit
   
if [ "$submit" = "y" ] ; then
   llsubmit $bfile
fi

exit 1
