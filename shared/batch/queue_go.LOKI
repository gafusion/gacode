#!/bin/sh
#
# SCRIPT:
#  queue_go.LOKI
#
# FUNCTION:
#  Batch generator for LOKI (AMD64+PBS)
#
# AUTHOR:
#  Jeff Candy <jeff.candy@gat.com>
#
# REVISIONS:
# 08 Mar 07: mrf
#  Modified to receive 5 arguments, rather than 4.  
#  The new argument is a path to sim.
# 19 May 11: D. Ernst <dernst@psfc.mit.edu>
#  Customized for Loki queues at MIT PSFC
#  
nproc=${1}
# don't use queue_name on Loki: queue_num=${2}
wtime=${2}:00:00
sim=${3}
simpath=${4}
code=${5}
nodes=$[${nproc}/8]
#nodes=`expr ${nproc} / 8`
theory=`groups | grep -c theory`

if [ ${theory} -eq 1 ]; then
   echo " Job will be submitted to THEORY queue"
   queue="theory"
else if [ ${2} -le 12 && ${nodes} -le 48 ]; then
  echo " Job will be submitted on DEFAULT queue (max 48 nodes, 12 hours)"
  queue="default"
else if [ ${2} -gt 12 && ${nodes} -le 32 ]; then
  echo " Job will be submitted on LONG queue (max 32 nodes, 24 hours)"
  queue="long"
else if [ ${2} -le 15 && ${nodes} -le 75 ]; then
  echo " Job will be submitted to BIG queue (max 75 nodes, 15 hours)"

if [ ${2} -gt 24 && ${theory} -eq 0 ] ; then
  echo " Shortening wall time to 24 hours"
  wtime=24:00:00
fi

bfile=$simpath/$sim/batch.src

echo "Output written to $bfile"
 
# Copy appropriate commands to batch directory:

echo "#PBS -N $sim" > $bfile
echo "#PBS -o $simpath/$sim/batch.out" >> $bfile
echo "#PBS -e $simpath/$sim/batch.err" >> $bfile
echo "#PBS -q $queue" >> $bfile
echo "#PBS -l nodes=$nodes:ppn=8,walltime=$wtime" >> $bfile
echo "#PBS -m ae" >> $bfile
echo "#PBS -M ${USER}@psfc.mit.edu" >> $bfile
# this is ok, because LDAP authentication requires all users have a C-Mod PSFC acct.
echo "date" >> $bfile

echo "$code -e $sim -n $nproc -p $simpath" >> $bfile 

# Submit to queue?
echo "Submit your job [y,n]?"
read submit
if [ "$submit" = "y" ] ; then
   qsub $bfile
fi

exit 1
