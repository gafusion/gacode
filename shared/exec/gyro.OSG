#!/bin/sh
#
# SCRIPT:
#  gyro.
#
# FUNCTION:
#  Parallel execution script
#
# For generic OSG submission
#

# Output functions
info() { echo "`date` `hostname -s` INFO: $*"; }
warning() { echo "`date` `hostname -s` WARNING: $*" 1>&2; }
error() { echo "`date` `hostname -s` ERROR: $*" 1>&2; }

# Input arguments
simdir=${1}
nproc=${2}
exec=${3}  

# Temporary files
TMP=${TMPDIR:-/tmp}/gyro.OSG.$$
trap "rm $TMP* 2>/dev/null" 0

# Change directory
cd $simdir

cp -pv ${TGYRO_DIR}/bin/{collect-output-osg,tgyro_osg_exec} .

export exec=$(basename "$exec") # For use by perl.

cat > $TMP.pl <<\EOF
#!/usr/bin/perl -w
use strict;

my $filelist;
my $output_tar = "output_files.tar.bz2";
my $exclude_list = "filelist-exclude.txt";
my $cmd = sprintf('ls -1 | grep -v -e CVS -e \'\.out$\' -e \'^batch\.\' -e \'%s\' -e \'%s\' |',
                  quotemeta($output_tar),
                  quotemeta($exclude_list));

open(FILES, $cmd) or
  die "Unable to open pipe for input.";
my @files = <FILES>;
chomp @files;
close(FILES);
open(FILELIST, ">$exclude_list") or
  die "Unable to open $exclude_list for output.";
# Add $output_list to list of files to exclude from tar.
print FILELIST join("\n", @files, $output_tar), "\n";
close(FILELIST);
# Add $exclude_list to list of files to transfer
$filelist = join(",", map { "$_" } @files, $exclude_list );

open(BATCH_SRC_NEW, ">$ARGV[0]") or die "Unable to open $ARGV[0] for output JDL";
open(BATCH_SRC, "<batch.src") or die "Unable to open JDL for input";
while (<BATCH_SRC>) {
  chomp;
  # Need to transfer all input files this way.
  s&^(\s*transfer_input_files\s*=\s*).*$&$1$filelist&;
  # executable line in JDL has path to exec: fill in exec name here.
  s&^(\s*executable\s*=\s*.*/).*$&$1$ENV{exec}& and print;
  print BATCH_SRC_NEW;
  print BATCH_SRC_NEW "\n";
}
close(BATCH_SRC);
close(BATCH_SRC_NEW);
EOF

chmod +x $TMP.pl
exec=$($TMP.pl $TMP.src)

if [[ -x "$exec" ]]; then
  echo "Executable $exec required by input $jm_input is not available" 1>&2
  exit 1
fi

unset exec # Remove from environment.

mv -f $TMP.src batch.src
condor_submit batch.src
