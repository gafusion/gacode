#!/bin/sh
#
# SCRIPT:
#  gyro.KITE
#
# FUNCTION:
#  Run from /local disks on PPPL Linux clusters
#
# NOTES:
# For PPPL petrel and fcc Linux clusters
# use /local disk for working directory during GYRO execution
# this script presumes that the user has already created a subdirectory
# /user_name in /local on each node used by the job.
 
srcdir=${1}
simdir=${2}
nproc=${3}

#echo " srcdir is $srcdir"
#echo " simdir is $simdir"
#echo " nproc is $nproc"

# Use Infinibad mpich on kite, but Gigabit elsewhere:
uname -n | grep kite > /dev/null
if [ $? -eq 0 ] ; then
  EXE_VERSION=BigScience_Inf
else
  EXE_VERSION=BigScience_Gig
fi

#-------- one-processor,  test option  ------------------------
if [ ${nproc} -eq 1 ]  ; then
#  EXE_VERSION=BigScience_32
#echo "EXE_VERSION is $EXE_VERSION"
   cd $simdir
echo " mpirun is built to use gigabit on falcon, but not allnodes have it"
echo "  nstxpool does not have gigabit; test with {ping node_name-g}"
echo "  nodes with no gigabit connection will hang here"
  mpirun -np $nproc  $srcdir/$EXE_VERSION
  exit
fi
#----------  multi processor section  --------------------------------------
# on PPPL Linux nodes use executable in /local/dmikkels
srcdir=/local/dmikkels

simname=${simdir##*/}
echo " simname is $simname"

# Check simdir before copying input files:
cd $simdir 
pwd | grep 'gyro/sim/' > /dev/null
# exit status in sh is given by $?
if [ $? -ne 0 ] ; then
  echo " exec/gyro.${GYRO_PLAT}: Not running in a GYRO sim directory; quitting"
  exit
fi
 
if  [ ! -e ${simdir}/new ]  ; then
  echo "  Now making  ${simdir}/new "
  mkdir ${simdir}/new
else
  if  [ -e ${simdir}/new/diff.out  ]  ; then
    echo "  Quit, already have ${simdir}/new/diff.out"
    exit
  fi
fi

# Make sure that the /local/user directory exists:
/bin/mkdir -p /local/${USER}
lsimdir=/local/${USER}/${simname} 
if  [ -e $lsimdir/t.out ]  ; then
  echo "  $lsimdir/t.out already exists ! ; quitting now "
  exit 
fi

echo " Running on:"
hostname
echo " Contents of /local/${USER}:"
ls /local/${USER}
echo "  Making lsimdir: $lsimdir" 
mkdir $lsimdir

echo "  Copy required files from $simdir to /local directory"
quit_flag=false
req_files="input.dat restart.dat halt gyrotest_flag"
for cp_file in $req_files ; do
  if [ -e $simdir/$cp_file ] ; then
    cp $simdir/$cp_file $lsimdir
  else
    echo " Can't find $simdir/$cp_file; so quitting"
    quit_flag=true
  fi
done

if [ quit_flag == true ] ; then
    exit
fi

opt_files="input_proscalar.dat input_pro.dat RESTART_0 RESTART_1 RESTART_eq_0 RESTART_eq_1 RESTART_tag_0  RESTART_tag_1"
echo "  Copy optional input files from $simdir to /local directory"
for cp_file in $opt_files ; do
  if [ -e $simdir/$cp_file ] ; then
    cp $simdir/$cp_file $lsimdir
  else
    echo " Didn't find $simdir/$cp_file; continue anyway"
  fi
done

echo "  Copy all .out files from $simdir to /local directory"
cp *.out $lsimdir

# Now ready to run in /local
cd $lsimdir 
# for testing make a local file
#cp input.dat input.local

mpirun -np $nproc $srcdir/$EXE_VERSION > batch.outl

echo "  Moving files from /local to simdir/new"
mv batch.outl $simdir/new
mv *.out $simdir/new
# don't need to move these back:
rm -f input_proscalar.dat input_pro.dat
for mv_file in $opt_files ; do
  if [ -e $mv_file ] ; then
    mv $mv_file $simdir/new
  else
    echo " Didn't find $mv_file; continue anyway"
  fi
done

echo "  Removing input files from /local"
rm -f input.dat restart.dat halt gyrotest_flag

#rm -f  input.local
echo "  Removing simdir from /local"
rmdir $lsimdir

exit
