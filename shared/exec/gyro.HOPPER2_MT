#! /usr/bin/env bash
#
# SCRIPT:
#  gyro.HOPPER2_MT
#
# FUNCTION:
#  Parallel execution script
#
# HOPPER SYSTEM INFO:
# - Cray XE6
# - 153,216 processor cores
# - 6,384 compute nodes
# - (2x) AMD Opteron 6172 (Magny-Cours) 12-core CPUs per compute node running at 2.1GHz
# - (4x) ccNUMA nodes per compute node (each CPU consists two 6-core NUMA nodes)
# - each compute node has 32GiB RAM (1.3GiB per core)
# - (1x) Gemini ASIC per 2 compute nodes arranged in 3D torus network topology

simdir=${1}
nproc=${2}
exec=${3}

cd $simdir

# NOTE:
#   -ss restrict processes to allocating local NUMA node memory only in order to reduce access latency
#   -sn make certain job allocated all 4 compute blade NUMA nodes
#   -S 1 means we want to spawn only 1 MPI task per NUMA node (meaning 2 MPI tasks per CPU)
#   -d 6 spawns 5 additional threads per MPI process for total of 6 threads per NUMA node
#   -cc processes constrained to CPU within assigned NUMA node but can migrate between cores
# NOTE:
#   - need to link with mpich_threadm library if full multi-thread support is needed
export MPICH_MAX_THREAD_SAFETY=funneled
aprun -n $nproc -ss -sn 4 -S 1 -d 6 -cc numa_node $exec
