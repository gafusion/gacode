#!/bin/bash
#==============================================================================
# cgyro_plot
#
# PURPOSE:
#  Plotting/listing routines for CGYRO output.
#==============================================================================

#==============================================================================
# Syntax validity check and help message
#
n=$#

if [ $n -eq 0 ]
then
  echo
  echo "Usage:    cgyro_plot [options]"
  echo
  echo "          -p <path>"
  echo "           Set optional path to simulation directory."
  echo "           [The default path is the current directory]"
  echo
  echo "          -e <simdir>"
  echo "           Use data in <simdir>."
  echo
  echo "          -ext <filetype>"
  echo "           Output file type."
  echo "           <filetype>=eps, pdf, png, svg, dump"
  echo
  echo "          -species <value>"
  echo "           Specify species to be plotted: [0,n_species-1]."
  echo
  echo "          -field <value>"
  echo "           Specify field to be plotted: [0,n_field-1]."
  echo
  echo "          -fc"
  echo "           Toggle plotting of field breakdown of fluxes."
  echo
  echo "          -moment <value>"
  echo "           Specify moment to be plotted [n,e,m,s]."
  echo
  echo "          -w <float>"
  echo "           Width of time-average window (1.0 is entire time history)."
  echo
  echo "          -plot <type>"
  echo "           Function to plot."
  echo "           <type> = text     (text summary of fluxes)"
  echo "                  = freq     (frequency versus time),"
  echo "                  = ky_freq  (frequency versus ky),"
  echo "                  = ball     (ballooning modes OR ZF test)"
  echo "                  = hb       (2D ballooning distribution)"
  echo "                  = hbcut    (1D ballooning distribution line plots),"
  echo "                  = geo      (geometry arrays)"
  echo "                  = zf       (zonal flow potential plot vs. time),"
  echo "                  = error    (time-integration error)"
  echo "                  = flux     (time-trace of fluxes for all species)"
  echo "                  = ky_flux  (bar plot of flux versus ky)"
  echo "                  = phi      (time-dependent ZF vs. finite-n intensities)"
  echo "                  = ky_phi   (time-dependent ky-phi intensities)"
  echo "                  = kx_phi   (average kx-phi intensities)"
  echo "                  = kxky_phi (kx-ky spectra of ave(|phi|))"
  echo "                  = rcorr_phi (time-average radial correlation function)"
  echo "                  = xflux    (radial profile of fluxes for all species)"
  echo "                  = fluct    (fluctuations)"
  echo "                  = vid      (create video from png files)"
  echo "                  = template (create simple template file to read data)"
  echo "                  = fix      (fix old simulation directory)"
  echo
  echo "          -mesh"
  echo "          Add mesh to hb plot."
  echo
  echo "          -ymin <float>"
  echo "          Minimum value of vertical axis (where applicable)."
  echo "          *Affects: flux, ky_flux"
  echo
  echo "          -ymax <float>"
  echo "          Maximum value of vertical axis (where applicable)."
  echo "          *Affects: flux, ky_flux"
  echo
  echo "          -lx <float>"
  echo "          Plot width (default 12)"
  echo
  echo "          -ly <float>"
  echo "          Plot height (default 6)."
  echo
  echo "          -fontsize <float>"
  echo "          Font size (default 18)."
  echo
  echo "          -nscale"
  echo "          Scale the fluxes with ne/ni factor"
  echo "          *Affects: flux"
  echo
  echo "          -theta <value>"
  echo "          Value of theta/pi used in hbcut"
  echo "          *Affects: hbcut"
  echo
  echo "          -tmax <float>"
  echo "          Maximum value of ballooning angle."
  echo "          *Affects: ball, hb, hbcut"
  echo
  echo "          -t <value>"
  echo "          Specify integer time index (-1 is last time)."
  echo "          *Affects: ball, hb, hbcut, fluct"
  echo
  echo "          -n <value>"
  echo "          Specify values of n (toroidal mode index)"
  echo "          *Affects: ky_phi"
  echo
  echo "          -cmap <value>"
  echo "          Name of colormap (jet,hsv,brg,...)"  
  echo
  echo "          -loc <loc>"
  echo "          Legend location (1-4)"  
  echo
  echo " OPTIONS FOR -plot fluct/vid"
  echo
  echo "          -nomp <threads>"
  echo "           Number of OpenMP threads per MPI task."
  echo
  echo "          -nx <int>"
  echo "           Number of radial interpolation points (default FFT)"
  echo
  echo "          -ny <int>"
  echo "           Number of alpha interpolation points (default FFT)"
  echo
  echo "          -fmin <float>"
  echo "           Minimum value for contour plot"
  echo
  echo "          -fmax <float>"
  echo "           Maximum value for contout plot"
  echo
  echo "          -start <int>"
  echo "           First frame for encoding"
  echo
  echo " LINEAR EXAMPLES:"
  echo "  $ cgyro_plot -e . -plot freq           [frequency versus time]"
  echo "  $ cgyro_plot -e . -plot ball -field 0  [phi versus ballooning angle]"
  echo "  $ cgyro_plot -e . -plot zf             [zf phi versus time]"
  echo
  echo
  echo " NONLINEAR EXAMPLES (fields):"
  echo "  $ cgyro_plot -e . -plot phi               [phi(t) for n=0 and n>0]"
  echo "  $ cgyro_plot -e . -plot ky_phi -n 0,2,4-8 [phi harmonics versus time]"
  echo "  $ cgyro_plot -e . -plot ky_phi -field 2   [bpar harmonics versus time]"
  echo " NONLINEAR EXAMPLES (fluxes):"
  echo "  $ cgyro_plot -e . -plot flux              [energy flux versus time]"
  echo "  $ cgyro_plot -e . -plot flux -ext png     [... above to PNG file]"
  echo "  $ cgyro_plot -e . -plot flux -moment n    [particle flux versus time]"
  echo "  $ cgyro_plot -e . -plot flux -fc -field 1 [A_par energy flux versus time]"
  echo "  $ cgyro_plot -e . -plot ky_flux           [energy flux versus ky]"


  exit 1
fi
#==============================================================================

#==============================================================================
# Define variables for flag capture
#
# Default simulation directory
LOCDIR=.
SIMROOT=$PWD

FONTSIZE=18
LX=12
LY=6

SPECIES=0
FIELD=0
FC=0
FTYPE=screen
PLOT_TYPE=field
TIME=-1
TMAX=-1.0
YMIN=0.0
YMAX=auto
W=0.5
MOMENT=e
INDX=1
THETA=0.0
N=null
MESH=0
NX=-1
NY=-1
NOMP=1
FMIN=auto
FMAX=auto
CMAP=jet
START=1
NSCALE=0
LOC=2
#==============================================================================

#==============================================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -plot) shift ; PLOT_FLAG=1 ; PLOT_TYPE=$1 ;;

  -e) shift ; LOCDIR=$1 ;;

  -p) shift ; SIMROOT=$1 ;;

  -species) shift ; SPECIES=$1 ;;

  -field) shift ; FIELD=$1 ;;

  -fc) FC=1 ;;

  -moment) shift ; MOMENT=$1 ;;

  -ext) shift ; FTYPE=$1 ;;

  -nomp) shift ; NOMP=$1 ;;

  -t) shift ; TIME=$1 ;;

  -tmax) shift ; TMAX=$1 ;;

  -theta) shift ; THETA=$1 ;;

  -ymax) shift ; YMAX=$1 ;;
  -ymin) shift ; YMIN=$1 ;;
  -lx) shift ; LX=$1 ;;
  -ly) shift ; LY=$1 ;;
  -fontsize) shift ; FONTSIZE=$1 ;;

  -w) shift ; W=$1 ;;
  -loc) shift ; LOC=$1 ;;

  -start) shift ; START=$1 ;;

  -n) shift ; N=$1 ;;
  -nx) shift ; NX=$1 ;;
  -ny) shift ; NY=$1 ;;
  -fmin) shift ; FMIN=$1 ;;
  -fmax) shift ; FMAX=$1 ;;
  -cmap) shift ; CMAP=$1 ;;
  -nscale) NSCALE=1 ;;

  -mesh) MESH=1 ;;

  -h) shift ; cat $GACODE_ROOT/cgyro/bin/FILE_FORMAT ; exit 0 ;;

  *) echo "ERROR: incorrect syntax." ; exit 1 ;;

  esac
  shift
done
#==============================================================================

if [ "$LOCDIR" == "." ]
then
   LOCDIR=`basename $PWD`
   cd .. ; SIMROOT=$PWD
fi
SIMDIR=$SIMROOT/$LOCDIR
cd $SIMDIR

PYROOT=$GACODE_ROOT/python/cgyro

#==============================================================================
PLT="$PYROOT/data_plot_single.py $FONTSIZE $LX $LY"

case "$PLOT_TYPE" in

   ball)
	python $PLT $PLOT_TYPE $TIME $FIELD $TMAX $FTYPE ;;

   hb)
	python $PLT $PLOT_TYPE $TIME $SPECIES $TMAX $MESH $FTYPE ;;

   hbcut)
	python $PLT $PLOT_TYPE $TIME $SPECIES $TMAX $THETA $FTYPE ;;

   freq)
	python $PLT $PLOT_TYPE $W $FTYPE ;;

   ky_freq)
	python $PLT $PLOT_TYPE $W $FTYPE ;;

   error)
	python $PLT $PLOT_TYPE $FTYPE ;;

   xflux)
	python $PLT $PLOT_TYPE $W $MOMENT $YMIN $YMAX $FTYPE $NSCALE ;;

   flux)
        python $PLT $PLOT_TYPE $W $FIELD $MOMENT $YMIN $YMAX $FC $FTYPE $LOC $NSCALE;;

   ky_flux)
	python $PLT $PLOT_TYPE $W $FIELD $MOMENT $YMIN $YMAX $FC $FTYPE ;;

   phi)
	python $PLT $PLOT_TYPE $FIELD $FTYPE ;;

   ky_phi)
	python $PLT $PLOT_TYPE $FIELD $YMIN $YMAX $N $FTYPE ;;

   kx_phi)
	python $PLT $PLOT_TYPE $FIELD $W $YMIN $YMAX $N $FTYPE ;;

   kxky_phi)
	python $PLT $PLOT_TYPE $FIELD $W $FTYPE ;;

   rcorr_phi)
        python $PLT $PLOT_TYPE $FIELD $W $FTYPE ;;

   zf)
	python $PLT $PLOT_TYPE $W $FIELD $FTYPE ;;

   geo)
       python $PLT $PLOT_TYPE $FTYPE ;;

   fluct)
       export OMP_NUM_THREADS=$NOMP ; python $PYROOT/plot_fluct.py $FTYPE $MOMENT $SPECIES $YMIN $YMAX $NX $NY $TIME $FMIN $FMAX $CMAP $FONTSIZE ;;

   text)
   	python $PYROOT/text.py $W $FTYPE ;;

   fix)
   	python $PYROOT/fix.py ;;

   template)
   	cp $PYROOT/template.py . ;;

   vid)
	FRAMERATE=20
   	$PYROOT/avconv_wrapper $START $FRAMERATE ;;

   *)
        echo "Unrecognized argument to -plot" ; exit 1 ;;

esac 

exit 0
