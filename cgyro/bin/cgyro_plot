#!/bin/bash
#==============================================================================
# cgyro_plot
#
# PURPOSE:
#  Plotting/listing routines for GYRO output.
#==============================================================================

#==============================================================================
# Syntax validity check and help message
#
n=$#

if [ $n -eq 0 ]
then
  echo
  echo "Usage:    cgyro_plot [options]"
  echo
  echo "          -p <path>"
  echo "          Set optional path to simulation directory."
  echo "          [The default path is the current directory]"
  echo
  echo "          -e <simdir>"
  echo "          Use data in <simdir>."
  echo 
  echo "          -ext <filetype>"
  echo "          Output file type."
  echo "           <filetype>=emf, eps, pdf, png, ps, raw, rgba, svg, svgz, dump"
  echo 
  echo "          -species <value>"
  echo "          Specify species to be plotted: [0,n_species-1]."
  echo
  echo "          -field <value>"
  echo "          Specify field to be plotted: [0,n_field-1]."
  echo
  echo "          -moment <value>"
  echo "          Specify moment to be plotted [n,e,m,s]."
  echo
  echo "          -t <value>"
  echo "          Specify integer time index (-1 is last time)."
  echo
  echo "          -tmax <float>"
  echo "          Maximum value of ballooning angle."
  echo
  echo "          -theta <value>"
  echo "          Value of theta/pi used in hbcut"
  echo
  echo "          -ymax <float>"
  echo "          Maximum value of vertical axis (where applicable)."
  echo
  echo "          -w <float>"
  echo "          Width of time-average window (1.0 is entire time history)."
  echo
  echo "          -plot <type>"
  echo 
  echo "              <type> = text   (text summary of fluxes)"
  echo "                     = freq   (frequency versus time),"
  echo "                     = ball   (ballooning modes)"
  echo "                     = hb     (2D ballooning distribution)"
  echo "                     = hbcut  (1D ballooning distribution line plots),"
  echo "                     = geo    (geometry arrays)"
  echo "                     = zf     (zonal flow potential plot vs. time),"
  echo "                     = flux_time (time-trace of fluxes for all species)"
  echo "                     = flux_ky   (bar plot of flux versus ky)"
  echo "                     = pwr       (time dependent field intensities)"
  echo "                     = pwr_kxky  (kx-ky spectra at final time)"
  echo "                     = note (notebook)"

  exit 1
fi
#==============================================================================

#==============================================================================
# Define variables for flag capture
#
# Default simulation directory
LOCDIR=.
SIMROOT=$PWD
SPECIES=0
FIELD=0
FTYPE=screen
PLOT_TYPE=field
TIME=-1
TMAX=-1.0
YMAX=auto
W=0.5
MOMENT=e
INDX=1
THETA=0.0
#==============================================================================

#==============================================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -plot) shift ; PLOT_FLAG=1 ; PLOT_TYPE=$1 ;;

  -e) shift ; LOCDIR=$1 ;;

  -p) shift ; SIMROOT=$1 ;;

  -species) shift ; SPECIES=$1 ;;

  -field) shift ; FIELD=$1 ;;

  -moment) shift ; MOMENT=$1 ;;

  -ext) shift ; FTYPE=$1 ;;

  -t) shift ; TIME=$1 ;;

  -tmax) shift ; TMAX=$1 ;;

  -theta) shift ; THETA=$1 ;;

  -ymax) shift ; YMAX=$1 ;;

  -w) shift ; W=$1 ;;

  -h) shift ; cat $GACODE_ROOT/cgyro/bin/FILE_FORMAT ; exit 0 ;;

  *) echo "ERROR: incorrect syntax." ; exit 1 ;;

  esac
  shift
done
#==============================================================================

if [ "$LOCDIR" == "." ]
then
   LOCDIR=`basename $PWD`
   cd .. ; SIMROOT=$PWD
fi
SIMDIR=$SIMROOT/$LOCDIR
cd $SIMDIR

PYROOT=$GACODE_ROOT/python/cgyro

#==============================================================================

case "$PLOT_TYPE" in

   ball)  
	python $PYROOT/plot_ball.py $FTYPE $TIME $FIELD $TMAX ;;

   hb)  
	python $PYROOT/plot_hb.py $FTYPE $TIME $SPECIES $TMAX ;;

   hbcut)  
	python $PYROOT/plot_hbcut.py $FTYPE $TIME $SPECIES $TMAX $THETA ;;

   freq)  
	python $PYROOT/plot_freq.py $FTYPE ;;

   flux_ky)  
	python $PYROOT/plot_flux_ky.py $FTYPE $W $MOMENT ;;

   flux_time)  
	if [ "$FTYPE" == "dump" ]
        then
	   python $PYROOT/dump_flux_time.py 
        else
	   python $PYROOT/plot_flux_time.py $FTYPE $W $MOMENT $YMAX 
        fi
        ;;
   pwr)  
	python $PYROOT/plot_pwr.py $FTYPE $FIELD ;;

   pwr_kxky)  
	python $PYROOT/plot_pwr_kxky.py $FTYPE $W $FIELD ;;

   pwr_zf)  
	python $PYROOT/plot_pwr_zf.py $FTYPE $W $FIELD ;;

   zf)  
	python $PYROOT/plot_zf.py $FTYPE $W $FIELD ;;

   geo)
	python $PYROOT/plot_geo.py $FTYPE ;;

   text)
   	python $PYROOT/text.py $W $FTYPE ;;

   note)
   	python $PYROOT/plot_notebook.py $W $FTYPE $SPECIES ;;

   *)
        echo "Unrecognized argument to -plot" ; exit 1 ;;

esac 

exit 0
