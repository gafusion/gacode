#!/bin/bash
#
#------------------------------------------------------
# SCRIPT:
#  cgyro_bat
#
# PURPOSE:
#  High-level management for generations of platform-specific 
#  cgyro batch file, and submit to queue if desired.
#--------------------------------------------------------

#=============================================================
# Syntax validity check and help message 
#
n=$#

if [ $n -eq 0 ]
then
   echo
  echo "Usage:   cgyro_bat [options]"
  echo
  echo "         -p <path>"
  echo "         Set optional path to simulation directory."
  echo "         [The default path is the current directory]"
  echo
  echo "BATCH EXECUTE MODE"
  echo
  echo "         -e <simdir>" 
  echo "         Run GYRO using input data in <simdir>."
  echo
  echo "         -n <MPI tasks>" 
  echo "         Number of MPI tasks."
  echo
  echo "         -nomp <threads>" 
  echo "         Number of OpenMP threads per MPI task."
  echo
  echo "         -numa <n>" 
  echo "         NUMAs active per node."
  echo
  echo "         -mpinuma <n>" 
  echo "         MPI tasks per active NUMA."
  echo
  echo "See https://fusion.gat.com/theory/Gyroplatforms for help"
  echo " choosing -numa and -mpinuma flags."
  echo

  exit 1
fi
#=============================================================

#=============================================================
# Define variables for flag capture
#
CODE=cgyro
# Default simulation root and gyro directory
SIMROOT=$PWD
GYRO_DIR=$GACODE_ROOT/gyro
# Default number of cores
NPROC=1
NOMP=1
NUMA=0
MPINUMA=0
NIDLE=0
START=new
#=============================================================

#=============================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -p) shift ; SIMROOT=$1 ;;

  -e) shift ; LOCDIR=$1 ; EXEC_FLAG=1 ;;

  -n) shift ; NPROC=$1 ;;

  -nomp) shift ; NOMP=$1 ;;

  -numa) shift ; NUMA=$1 ;;

  -mpinuma) shift ; MPINUMA=$1 ;;

  -nidle) shift ; NIDLE=$1 ;;

  -start) shift ; START=$1 ;;

   *) echo "ERROR: incorrect gyro_bat syntax." ; exit 1 ;;
 
  esac
  shift
done
#=============================================================

if [ "$LOCDIR" == "." ]
then
   LOCDIR=`basename $PWD`
   cd .. ; SIMROOT=$PWD
fi
SIMDIR=$SIMROOT/$LOCDIR

#===========================================================
# Manage start control
# 
CODE="$CODE -start $START"
#===========================================================

# Pass control to platform-specific script
$GACODE_ROOT/shared/batch/queue.${GACODE_PLATFORM} \
 $NPROC $LOCDIR $SIMROOT "$CODE" $NOMP $NUMA $MPINUMA $NIDLE

exit 0
