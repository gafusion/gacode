#!/usr/bin/env python

import os
import sys, getopt
import numpy as np
import pandas as pd
from tqdm import tqdm
from gacodeinput import *
from gacodefuncs import *
from cgyro.data import cgyrodata

mode = 'enum'

try:
   opts, args = getopt.getopt(sys.argv[1:],"hm:",[])
except getopt.GetoptError:
   print('cgyrodb -m <mode>')
   sys.exit(2)

for opt, arg in opts:
   if opt == '-h':
      print('cgyrodb -m <mode>')
      sys.exit()
   elif opt == '-m':
      mode = arg

meta = {}

def gendict(sim,mode):

   mydict = {}

   mydict['n_radial'] = sim.n_radial
   mydict['n_theta'] = sim.n_theta
   mydict['q'] = sim.q
   mydict['s'] = sim.shear

   if mode == 'flux':
      sim.getflux()
      y = np.sum(sim.ky_flux,axis=(2,3))   
      for ispec in range(sim.n_species):
         g = average(y[ispec,0,:],sim.t,0.5,0.0)
         q = average(y[ispec,1,:],sim.t,0.5,0.0)
         v = average(y[ispec,2,:],sim.t,0.5,0.0)
         mydict['g'+str(ispec)] = g
         mydict['q'+str(ispec)] = q
         mydict['v'+str(ispec)] = v

   return mydict

# First locate all directories
y = []
for root,xd,xf in os.walk('./'):
   if xd == []:
      y.append(root)

# Create master dictionary
for mdir in tqdm(y):
    sim = cgyrodata(mdir+'/',silent=True)
    meta[mdir]=gendict(sim,mode)
   
df = pd.DataFrame(meta) 
print(df.T[['n_radial','q','s']])
