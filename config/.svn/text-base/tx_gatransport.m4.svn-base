dnl ######################################################################
dnl
dnl File:	tx_gatransport.m4
dnl
dnl Purpose:	Find the various libraries that make up the
dnl         	GA transport modules
dnl
dnl Version: $Id$
dnl
dnl Tech-X configure system
dnl
dnl ######################################################################

dnl-----------------------------------------------------------------------
dnl This follows ntcc transport by getting all of the libraries
dnl separately for maximum flexiblity.  However, because the only builds
dnl are from our svn repo and configure system, I'm less flexibile in
dnl how I look: Only look in one spot.
dnl-----------------------------------------------------------------------
dnl-----------------------------------------------------------------------
dnl Common base search path
dnl-----------------------------------------------------------------------

if test -n "$GATRANSPORT"; then
  GATRANSPORT_PATH=`dirname $GATRANSPORT`
fi

if test x$parallel = xyes; then
  for i in `echo $SUPRA_SEARCH_PATH | tr ':' ' '`; do
    GATRANSPORT_PATH="$GATRANSPORT_PATH:$i/ga_transport-par"
  done
else
  for i in `echo $SUPRA_SEARCH_PATH | tr ':' ' '`; do
# Second is deprecated
    GATRANSPORT_PATH="$GATRANSPORT_PATH:$i/ga_transport:$i/ga_transport-ser"
  done
fi

dnl jrc: do NOT add home paths
unset GATRANSPORT_INC
unset GATRANSPORT_LIBS
unset GATRANSPORT_RPLIBS
unset FOUND_GATRANSPORT

dnl ######################################################################
dnl
dnl Find all libs
dnl
dnl ######################################################################

case "$TX_FORTRAN_MODCAP" in
  ucname-*)
    TX_LOCATE_PKG(
      [GATRANSPORT],
      [$GATRANSPORT_PATH],
      [GYRO_INTERFACE.mod, NEO_INTERFACE.mod, TGLF_INTERFACE.mod],
      [GYRO, NEO, TGLF],
      [include],
      [lib/$FC_LIBSUBDIR]
    )
    ;;
  lcname-*)
    TX_LOCATE_PKG(
      [GATRANSPORT],
      [$GATRANSPORT_PATH],
      [gyro_interface.mod, neo_interface.mod, tglf_interface.mod],
      [GYRO, NEO, TGLF],
      [include],
      [lib/$FC_LIBSUBDIR]
    )
    ;;
esac

# Reverse default definition, as part is good here
AM_CONDITIONAL(HAVE_GATRANSPORT, test -n "$GATRANSPORT_LIBS")
if test -n "$GATRANSPORT_LIBS"; then
  AC_DEFINE(HAVE_GATRANSPORT, [], [Defined if GATRANSPORT found])
fi

# Define for subpackages
AM_CONDITIONAL(HAVE_GYRO, test -n "$GATRANSPORT_LIB_GYRO")
if test -n "$GATRANSPORT_LIB_GYRO"; then
  AC_DEFINE(HAVE_GYRO, [], [Defined if GYRO found])
fi
AM_CONDITIONAL(HAVE_NEO, test -n "$GATRANSPORT_LIB_NEO")
if test -n "$GATRANSPORT_LIB_NEO"; then
  AC_DEFINE(HAVE_NEO, [], [Defined if NEO found])
fi
AM_CONDITIONAL(HAVE_TGLF, test -n "$GATRANSPORT_LIB_TGLF")
if test -n "$GATRANSPORT_LIB_TGLF"; then
  AC_DEFINE(HAVE_TGLF, [], [Defined if TGLF found])
fi

dnl ######################################################################
dnl
dnl One could now add code to find any libraries not found above
dnl
dnl ######################################################################

