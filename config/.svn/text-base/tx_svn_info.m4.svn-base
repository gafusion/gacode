# ######################################################################
#
# File:	svninfo.m4
#
# Purpose:	To get svn URL and revision number for a project.
#
# Version:	$Id$
#
# Copyright 2007-2010, Tech-X Corporation. Redistribution allowed provided
# this copyright statement remains intact.
#
# ######################################################################

dnl ######################################################################
dnl
dnl Function:   TX_SVN_INFO(url-variable, revision-variable, directory)
dnl
dnl Purpose:    To get the URL and REVISION variables for svn
dnl     Calls AC_SUBST for those variables.
dnl
dnl ######################################################################

AC_DEFUN([TX_SVN_INFO], [

  AC_MSG_CHECKING([for svn information for the subdir [$3] ])
  case $3 in
    /*) svndir=$3;;
   c:*) svndir=$3;;
     *) if test -z "$abs_top_srcdir"; then
          AC_MSG_ERROR(\$abs_top_srcdir not defined!)
        fi
 	svndir="$abs_top_srcdir/$3";;
  esac
  uselastchanged=true
  if test -n "$4"; then
    uselastchanged=$4
  fi
  if test -d "$svndir"; then
    svndir=`(cd $svndir; pwd -P)`
  else
    AC_MSG_ERROR($svndir not found!)
  fi
  svninfofile=$svndir/svninfo.txt
  # echo svninfofile = $svninfofile

# Refresh svninfo.txt if a checkout

  if test -d $svndir/.svn; then
    cd $svndir
    svn info > $svninfofile 2>/dev/null
    TX_PROJ_REV=`svnversion .` 2>/dev/null

# If TX_PROJ_REV is a numeric revision, then it may not reflect the actual
# revision where the last change was made in its particular branch/trunk/etc.
# In other words, the last-changed rev may be less than the current rev, and
# if so, we really want TX_PROJ_REV to be the last-changed rev. That way, one
# can determine the branch or trunk which corresponds to the rev.
#
# On the other hand, if TX_PROJ_REV is anything other than a numeric revision,
# (e.g., 12382:12402, 12733M, 12733S, 12413:12416MS, etc.), then we leave it
# alone.
#
# JRC: The last-changed rev can depend on a subdirectory, and
# I need to know this on the whole repo basis for transpgraphics,
# so I am adding a switch.
    if $uselastchanged; then
      case $TX_PROJ_REV in
        *[^0-9]*) ;;
               *) TX_PROJ_REV=`svnversion -c | sed 's/.*://'`;;
      esac
    fi
    cd - 1>/dev/null 2>&1
  else
    if $uselastchanged; then
      TX_PROJ_REV=`grep '^Last Changed Rev: ' $svninfofile | sed 's/^Last Changed Rev: //'`
    else
      TX_PROJ_REV=`grep '^Revision: ' $svninfofile | sed 's/^Revision: //'`
    fi
  fi
  if test ! -f $svninfofile; then
    AC_MSG_ERROR($svninfofile not found!)
  fi
  TX_PROJ_URL=`grep ^URL: $svninfofile | sed 's/^.* //'`
  $1=$TX_PROJ_URL
  $2=$TX_PROJ_REV
  AC_SUBST([$1])
  AC_DEFINE_UNQUOTED([$1], "$TX_PROJ_URL", "SVN Project URL for the subdir $3")
  AC_SUBST([$2])
  AC_DEFINE_UNQUOTED([$2], "$TX_PROJ_REV", "SVN Project REV for the subdir $3")
  AC_MSG_RESULT([$TX_PROJ_URL, Revision $TX_PROJ_REV])

  if test -n "$config_summary_file"; then
    echo >>$config_summary_file
    echo $3 from svn with >>$config_summary_file
# JRC: unable to make TX_PRINT_VAR work on benten yet.
    # TX_PRINT_VAR([$1])
    # TX_PRINT_VAR([$2])
    eval printf  \""  "$1 = %s\\n\" \"$TX_PROJ_URL\" >>$config_summary_file
    eval printf  \""  "$2 = %s\\n\" \"$TX_PROJ_REV\" >>$config_summary_file
  fi

])
