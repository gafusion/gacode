name: gacode CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    strategy:
      matrix:
        os: [linux-gpu-cuda]
        hwflavor: [cpu, cuda]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        auto-update-conda: true
    - name: Install 
      shell: bash -l {0}
      run: |
        df -h .
        conda create -q --yes --strict-channel-priority -n gacode -c conda-forge gxx_linux-64 gfortran_linux-64 make curl wget python
        conda clean --yes -t
        df -h .
        conda activate gacode
        echo "$(uname -s)"
        if [[ "$(uname -s)" == "Linux" ]];
        then
          which x86_64-conda-linux-gnu-gcc
          x86_64-conda-linux-gnu-gcc -v
          x86_64-conda-linux-gnu-g++ -v
        else
          which clang
          clang -v
        fi
        if [[ "$${{ matrix.hwflavor }}" == "cpu" ]]; then
          conda install --yes --strict-channel-priority -c conda-forge fftw 'openblas=*=*openmp*'
          conda install --yes --strict-channel-priority -c conda-forge mpich
          export GACODE_PLATFORM=CONDA_CPU
        else
          # install NVIDIA HPC SDK
          .github/support_scripts/install_hpc_sdk.sh
          source setup_scripts/setup_nv_hpc_bins.sh
          export GACODE_PLATFORM=CONDA_NVHPC_GPU
          if [[ "$${{ matrix.hwflavor }}" == "ompgpu" ]]; then
             export GACODE_OMPGPU=1
          else
             export GACODE_OMPGPU=0
          fi
        fi
        df -h .
        export GACODE_ROOT=$PWD
        . $GACODE_ROOT/shared/bin/gacode_setup
        source $GACODE_ROOT/platform/env/env.${GACODE_PLATFORM}
        echo "======= begin env ====="
        env
        echo "=======  end env  ====="
        # build the code
        (cd cgyro && make)
            
    - name: Tests
      shell: bash -l {0}
      run: |
        conda activate gacode
        setup_scripts/setup_nv_hpc_bins.sh
        if [[ "$${{ matrix.hwflavor }}" == "cpu" ]]; then
          export GACODE_PLATFORM=CONDA_CPU
        else
          source setup_scripts/setup_nv_hpc_bins.sh
          export GACODE_PLATFORM=CONDA_NVHPC_GPU
          if [[ "$${{ matrix.hwflavor }}" == "ompgpu" ]]; then
             export GACODE_OMPGPU=1
          else
             export GACODE_OMPGPU=0
          fi
        fi
        export GACODE_ROOT=$PWD
        . $GACODE_ROOT/shared/bin/gacode_setup
        source $GACODE_ROOT/platform/env/env.${GACODE_PLATFORM}
        echo "======= begin env ====="
        env
        echo "=======  end env  ====="
        # test the code
        (cd cgyro/bin && cgyro -r -n 4 -nomp 2) | tee cgyro_reg.log
        echo "=======  results  ====="
        grep reg cgyro_reg.log |tee  cgyro_reg.tests.log
        grep PASS cgyro_reg.tests.log > cgyro_reg.tests.pass.log
        cnt=`wc -l cgyro_reg.tests.pass.log |awk '{print $1}'`
        if [ "$cnt" -eq 20 ]; then echo "== ALL passed =="; else echo "Some tests FAILED"; test -z "error"; fi

    - name: Sanity checks
      shell: bash -l {0}
      run: |
        conda activate gacode
        echo "TODO"
