#!/bin/bash
# Erik Granstedt
# run GYRO for one timestep only, put the run output to standard output and save as single.out

n=$#

HELP=$GYRO_DIR/bin/HELP_SINGLE

# exit if no arguments
if [[ $n -ne 4 && $n -ne 6 ]]
then
   cat $HELP ;
   exit 1
fi

# set default simroot
simroot=$GYRO_DIR/sim
# determine if optional path was provided
if [ $n -eq 6 ] 
then
   # set simdir to specified path
   simroot=${6}
fi

# Now set simdir knowing simroot
case "${1}" in
    # execute mode
  -e )
	simdir=$simroot/${2}
      # define executable directory and CONTINUE
      if ! gyro_sim_warn $simdir 
      then
         exit 1 ;
      fi ;
      srcdir=$GYRO_DIR/src ;
      echo "0" > "$simdir/gyrotest_flag" ;;

  -* | * )
      # error trap
      cat $HELP ;
      exit 1 ;;
esac

# Now get number of processors
case "${3}" in
    # execute mode
  -n )
	nprocs=${4};;

  -* | * )
      # error trap
      cat $HELP ;
      exit 1 ;;
esac

echo "sim directory is:" $simdir
echo "n processors is:" $nprocs

# make tmp directory
if [[ ! -d $simdir/single ]]; then
    mkdir $simdir/single
fi
cp -f $simdir/INPUT $simdir/single/INPUT
if [[ -e $simdir/input.profiles ]]; then 
    cp -f $simdir/input.profiles $simdir/single/input.profiles
fi
if [[ -e $simdir/input.profiles.geo ]]; then 
    cp -f $simdir/input.profiles.geo $simdir/single/input.profiles.geo
fi
cp -f $simdir/restart.dat $simdir/single/restart.dat

grep TIME_STEP $simdir/single/INPUT | sed 's/TIME_STEP/TIME_MAX/' >> $simdir/single/INPUT

gyro -e single -n $nprocs -p $simdir/

mv $simdir/single/run.out $simdir/single.out
# remove tmp directory
/bin/rm -r $simdir/single

cat $simdir/single.out


