#!/bin/bash
#==============================================================================
# tgyro_plot
#
# PURPOSE:
#  Handles plotting of tgyro output
#==============================================================================

#==============================================================================
# Syntax validity check and help message
#
n=$#

if [ $n -eq 0 ]
then
   echo
   echo "Usage:   tgyro_plot [options]"
   echo
   echo "         tgyro_plot provides primitive plotting routines for output"
   echo "         from tgyro through python and matplotlib.  The acquisition"
   echo "         and storage of data is handled through a python class called"
   echo "         TGYROData, which is automatically called when this script is"
   echo "         run."
   echo
   echo "         -l <path>"
   echo "         Loads all output files in specified directory.  If no"
   echo "         directory is given, then the current working directory is"
   echo "         used."
   echo
   echo "         -p <options>"
   echo "         Opens python for editing with specified directory loaded, and"
   echo "         creates requested summary plots.  Options are:"
   echo "             Typing 'ps' after '-p' creates a profile summary plot."
   echo "             gs creates a gradient summary plot"
   echo "             cs creates a chi-value summary plot"
   echo "             fs creates an energy flux summary plot"
   echo "             ms creates a momentum flux summary plot"
   echo "         If no options are specified, then the python shell opens with"
   echo "         no plots created by default.  There is no limit to the number"
   echo "         of summary plots that may be specified after -p.  After the"
   echo "         shell has loaded, type 'help(TGYROData)' for information on"
   echo "         how to create plots with python."
   echo "         Typing 'help(plt)' is also useful, but can be a little"
   echo "         overwhelming.  The online help for matplotlib is much better"
   echo "         organized, and searchable as well.  At time of creation of"
   echo "         this file, the website for matplotlib was:"
   echo "         http://matplotlib.sourceforge.net/"
   echo ""

exit 1
fi

#==============================================================================
# Define variables for flag capture
#
# Default output directory
PLOT_DIR=$PWD
N1=1
N2=1
# Plot mode flags
LOAD_FLAG=0
LINE_FLAG=0
VERBOSE_FLAG=0
LEGEND_FLAG=0
PLOT_STRING=""
#==============================================================================

#==============================================================================
# Parse command line options
#
while [ $# -gt 0 ] ; do
  case "$1" in

  -l) shift ; PLOT_DIR=$1 ; shift ;;

  -p) shift ; LINE_FLAG=1 ; PLOT_STRING="$1" ; shift ; break ;;

  -dim) shift ; N1=$1 ; shift ; N2=$1 ; shift ;;

  -v) shift ; VERBOSE_FLAG=1 ;;

  -s) shift ; LEGEND_FLAG=0 ;;

  *) echo "ERROR: incorrect syntax." ; exit 1 ;;

  esac
done
#==============================================================================
# Plot data

if [ $LINE_FLAG -eq 1 ]
then
  while [ $# -gt 0 ]
  do
    PLOT_STRING="$PLOT_STRING $1"
    shift
  done
  echo `which python`
  if [ "$PLOT_STRING" != "" ]
  then
    Python $GACODE_ROOT/shared/python/pyrats/tgyro/interpreter.py $PLOT_DIR $N1 $N2 $VERBOSE_FLAG $LEGEND_FLAG $PLOT_STRING &
    exit 0
  else
    Python -i $GACODE_ROOT/shared/python/pyrats/tgyro/interpreter.py $PLOT_DIR $N1 $N2 $VERBOSE_FLAG $LEGEND_FLAG $PLOT_STRING
    exit 0
  fi
fi
